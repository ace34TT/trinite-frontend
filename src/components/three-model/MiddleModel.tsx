/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Bracelet-with-diamond-2.glb --transform --types
*/

import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useWindowSize } from "react-use";

type GLTFResult = GLTF & {
  nodes: {
    Circle001: THREE.Mesh;
    Circle001_1: THREE.Mesh;
    Circle001_2: THREE.Mesh;
    Circle016: THREE.Mesh;
  };
  materials: {
    ["Scratched Gold"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
  };
};

export function MiddleModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/model-4-5/Bracelet-with-diamond-2-transformed.glb"
  ) as GLTFResult;
  const [scale, setScale] = useState(0.15);
  const { width } = useWindowSize();
  useEffect(() => {
    if (width < 768) {
      setScale(0.1);
    } else {
      setScale(0.15);
    }
  }, [width]);

  return (
    <group {...props} dispose={null}>
      <group position={[0, -0.2, 0]} rotation={[1.8, 0, 1.2]} scale={scale}>
        <mesh
          geometry={nodes.Circle001.geometry}
          material={materials["Scratched Gold"]}
        />
        <mesh
          geometry={nodes.Circle001_1.geometry}
          material={materials["Scratched Gold"]}
        />
        <mesh
          geometry={nodes.Circle001_2.geometry}
          material={materials["Scratched Gold"]}
        />
      </group>
      <mesh
        geometry={nodes.Circle016.geometry}
        material={materials.Material}
        position={[0, -0.2, 0]}
        rotation={[1.8, 0, 1.2]}
        scale={scale}
      />
    </group>
  );
}

// useGLTF.preload("/models/model-4-5/Bracelet-with-diamond-2-transformed.glb");
