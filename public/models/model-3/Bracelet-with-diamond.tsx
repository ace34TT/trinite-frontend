/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Bracelet-with-diamond.glb --transform --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Diamond: THREE.Mesh
    Circle009_1: THREE.Mesh
    Circle009_2: THREE.Mesh
    Circle009_3: THREE.Mesh
    Circle009_4: THREE.Mesh
  }
  materials: {
    ['Dispersive diamond']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Scratched Gold']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Bracelet-with-diamond-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Diamond.geometry} material={materials['Dispersive diamond']} position={[0, 0.08, 0]} rotation={[0.77, -1.57, 0]} />
      <group position={[0.01, 0.2, -0.02]} rotation={[1.57, 0, 1.23]} scale={0.08}>
        <mesh geometry={nodes.Circle009_1.geometry} material={materials.Material} />
        <mesh geometry={nodes.Circle009_2.geometry} material={materials['Scratched Gold']} />
        <mesh geometry={nodes.Circle009_3.geometry} material={materials['Scratched Gold']} />
        <mesh geometry={nodes.Circle009_4.geometry} material={materials['Scratched Gold']} />
      </group>
    </group>
  )
}

useGLTF.preload('/Bracelet-with-diamond-transformed.glb')
