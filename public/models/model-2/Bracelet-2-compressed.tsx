/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Bracelet-2-compressed.glb --transform --types
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Circle002: THREE.Mesh;
    Circle003: THREE.Mesh;
    Circle004: THREE.Mesh;
  };
  materials: {
    ["Scratched Gold"]: THREE.MeshStandardMaterial;
    ["Scratched Gold.002"]: THREE.MeshStandardMaterial;
    ["Scratched Gold.001"]: THREE.MeshStandardMaterial;
  };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/Bracelet-2-compressed-transformed.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Circle002.geometry}
        material={materials["Scratched Gold"]}
        position={[0.03, 0.2, -0.02]}
        rotation={[1.61, 0, -1.91]}
        scale={1.54}
      />
      <mesh
        geometry={nodes.Circle003.geometry}
        material={materials["Scratched Gold.002"]}
        position={[0.03, 0.05, -0.02]}
        rotation={[1.61, 0, -1.91]}
        scale={1.54}
      />
      <mesh
        geometry={nodes.Circle004.geometry}
        material={materials["Scratched Gold.001"]}
        position={[0.03, 0.35, -0.01]}
        rotation={[1.61, 0, -1.91]}
        scale={1.54}
      />
    </group>
  );
}

useGLTF.preload("/Bracelet-2-compressed-transformed.glb");
