/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Bracelet-compressed.glb --types
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Circle002: THREE.Mesh
  }
  materials: {
    ['Scratched Gold']: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Bracelet-compressed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Circle002.geometry} material={materials['Scratched Gold']} position={[0.03, 0.2, -0.02]} rotation={[1.61, 0, -1.91]} scale={1.54} />
    </group>
  )
}

useGLTF.preload('/Bracelet-compressed.glb')
